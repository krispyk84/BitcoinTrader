package ec;

/**
Fitness: 215068
Generated by ECJ2Java on Sat May 02 08:46:56 EDT 2015
**/

public class MathSolution {

	public double calculate(double x, double AverageOver30s, double AverageOver60s, double AverageOver90s, double AverageOver120s, double RateOfChangeOver30s, double RateOfChangeOver60s, double RateOfChangeOver90s, double RateOfChangeOver120s, double RelativeStrengthIndexOver30s, double RelativeStrengthIndexOver60s, double RelativeStrengthIndexOver90s, double RelativeStrengthIndexOver120s, double MacdValue, double MaxValueOver30s, double MaxValueOver60s, double MaxValueOver90s,  double MaxValueOver120s,  double MinValueOver30s,  double MinValueOver60s,  double MinValueOver90s,  double MinValueOver120s, double VarBwBSandBF60s, double VarBwBSandBF120s, double VarBwBSandBF240s, double VarBwBSandBT60s, double VarBwBSandBT120s, double VarBwBSandBT240s, double VarBwBSandOK60s, double VarBwBSandOK120s, double VarBwBSandOK240s, double VolatilityOver30s, double VolatilityOver60s, double VolatilityOver120s) {
		double func_4 = VarBwBSandBT240s * -2.6635617398861493;
		double func_5 = Math.log(Math.abs(func_4));
		double func_7 = Math.cos(Math.toRadians(MinValueOver30s));
		double func_8 = func_5 * func_7;
		double func_12 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_13 = func_8 + func_12;
		double func_15 = -1.1049359927086218 == 0 ? 0 : MinValueOver90s / -1.1049359927086218;
		double func_16 = Math.cos(Math.toRadians(func_15));
		double func_17 = func_13 * func_16;
		double func_19 = VarBwBSandBT240s * -2.6635617398861493;
		double func_21 = -1.1049359927086218 == 0 ? 0 : MinValueOver90s / -1.1049359927086218;
		double func_23 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_27 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_28 = func_27 == 0 ? 0 : func_23 / func_27;
		double func_31 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_32 = func_28 + func_31;
		double func_34 = Math.cos(Math.toRadians(VarBwBSandBT120s));
		double func_37 = MacdValue + VarBwBSandOK120s;
		double func_38 = Math.cos(Math.toRadians(func_37));
		double func_40 = func_38 - MaxValueOver60s;
		double func_42 = func_40 - MaxValueOver30s;
		double func_43 = ( func_32>=1 ) ? func_34 : func_42;
		double func_44 = Math.cos(Math.toRadians(func_43));
		double func_45 = func_21 * func_44;
		double func_46 = func_19 + func_45;
		double func_47 = func_46 == 0 ? 0 : func_17 / func_46;
		double func_50 = MaxValueOver60s * VarBwBSandBF60s;
		double func_52 = Math.pow(VarBwBSandBT240s,2);
		double func_53 = func_50 - func_52;
		double func_56 = MaxValueOver60s * VarBwBSandBF60s;
		double func_57 = ( func_47>=1 ) ? func_53 : func_56;
		double func_58 = -2.887440981858045 == 0 ? 0 : func_57 / -2.887440981858045;
		double func_60 = Math.log(Math.abs(VolatilityOver30s));
		double func_64 = ( RelativeStrengthIndexOver90s>=1 ) ? MaxValueOver60s : AverageOver90s;
		double func_65 = ( func_58>=1 ) ? func_60 : func_64;
		double func_66 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : func_65;
		double func_67 = Math.pow(func_66,2);
		double func_68 = Math.cos(Math.toRadians(func_67));
		double func_71 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_74 = ( func_71>=1 ) ? VolatilityOver30s : AverageOver60s;
		double func_75 = Math.log(Math.abs(func_74));
		double func_76 = Math.sin(Math.toRadians(func_75));
		double func_80 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_82 = Math.cos(Math.toRadians(VarBwBSandOK60s));
		double func_83 = func_82 == 0 ? 0 : func_80 / func_82;
		double func_86 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_87 = func_83 + func_86;
		double func_91 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_92 = func_87 + func_91;
		double func_94 = Math.cos(Math.toRadians(RelativeStrengthIndexOver30s));
		double func_96 = ( func_92>=1 ) ? func_94 : AverageOver30s;
		double func_97 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : func_96;
		double func_98 = func_76 - func_97;
		double func_101 = Math.pow(AverageOver60s,2);
		double func_105 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_106 = Math.pow(func_105,2);
		double func_107 = Math.cos(Math.toRadians(func_106));
		double func_108 = func_101 - func_107;
		double func_109 = ( func_98>=1 ) ? AverageOver90s : func_108;
		double func_111 = func_109 * VarBwBSandBT240s;
		double func_112 = Math.sin(Math.toRadians(func_111));
		double func_113 = Math.pow(func_112,2);
		double func_116 = MacdValue + VarBwBSandOK120s;
		double func_117 = Math.cos(Math.toRadians(func_116));
		double func_120 = RateOfChangeOver120s == 0 ? 0 : RateOfChangeOver90s / RateOfChangeOver120s;
		double func_121 = Math.log(Math.abs(func_120));
		double func_123 = func_121 * MinValueOver60s;
		double func_124 = func_123 == 0 ? 0 : func_117 / func_123;
		double func_129 = AverageOver60s * MinValueOver30s;
		double func_130 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : func_129;
		double func_131 = Math.pow(func_130,2);
		double func_132 = func_131 * -2.6635617398861493;
		double func_136 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_137 = Math.log(Math.abs(func_136));
		double func_138 = ( func_124>=1 ) ? func_132 : func_137;
		double func_139 = -2.887440981858045 == 0 ? 0 : func_138 / -2.887440981858045;
		double func_141 = Math.cos(Math.toRadians(MacdValue));
		double func_145 = ( RelativeStrengthIndexOver90s>=1 ) ? MaxValueOver60s : AverageOver90s;
		double func_146 = ( func_139>=1 ) ? func_141 : func_145;
		double func_149 = MinValueOver60s * RateOfChangeOver120s;
		double func_152 = MinValueOver120s == 0 ? 0 : MinValueOver30s / MinValueOver120s;
		double func_153 = func_149 + func_152;
		double func_155 = Math.cos(Math.toRadians(RateOfChangeOver90s));
		double func_157 = Math.sin(Math.toRadians(AverageOver90s));
		double func_161 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_163 = Math.cos(Math.toRadians(MinValueOver30s));
		double func_164 = func_161 * func_163;
		double func_168 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_169 = func_164 + func_168;
		double func_170 = ( func_155>=1 ) ? func_157 : func_169;
		double func_171 = func_170 == 0 ? 0 : func_153 / func_170;
		double func_176 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_177 = Math.pow(func_176,2);
		double func_178 = RelativeStrengthIndexOver90s * func_177;
		double func_180 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_182 = Math.log(Math.abs(VarBwBSandBF60s));
		double func_186 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_187 = Math.cos(Math.toRadians(func_186));
		double func_190 = MacdValue + VarBwBSandOK120s;
		double func_191 = Math.cos(Math.toRadians(func_190));
		double func_192 = ( func_182>=1 ) ? func_187 : func_191;
		double func_193 = Math.cos(Math.toRadians(func_192));
		double func_194 = func_193 == 0 ? 0 : func_180 / func_193;
		double func_197 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_198 = func_194 + func_197;
		double func_201 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_202 = func_198 + func_201;
		double func_203 = ( func_171>=1 ) ? func_178 : func_202;
		double func_204 = Math.cos(Math.toRadians(func_203));
		double func_206 = -1.1049359927086218 == 0 ? 0 : MinValueOver90s / -1.1049359927086218;
		double func_207 = ( func_146>=1 ) ? func_204 : func_206;
		double func_210 = MaxValueOver60s * VarBwBSandBF60s;
		double func_213 = MaxValueOver60s * VarBwBSandBF60s;
		double func_215 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_219 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_220 = Math.cos(Math.toRadians(func_219));
		double func_221 = func_220 == 0 ? 0 : func_215 / func_220;
		double func_222 = func_213 - func_221;
		double func_226 = ( RelativeStrengthIndexOver90s>=1 ) ? RelativeStrengthIndexOver90s : AverageOver90s;
		double func_227 = Math.pow(func_226,2);
		double func_228 = Math.cos(Math.toRadians(func_227));
		double func_229 = Math.cos(Math.toRadians(func_228));
		double func_231 = RelativeStrengthIndexOver90s == 0 ? 0 : func_229 / RelativeStrengthIndexOver90s;
		double func_234 = MaxValueOver60s * VarBwBSandBF60s;
		double func_237 = RateOfChangeOver120s == 0 ? 0 : RateOfChangeOver90s / RateOfChangeOver120s;
		double func_238 = func_234 - func_237;
		double func_239 = Math.cos(Math.toRadians(func_238));
		double func_242 = RateOfChangeOver120s + MaxValueOver120s;
		double func_246 = ( VarBwBSandOK120s>=1 ) ? MinValueOver60s : RateOfChangeOver120s;
		double func_248 = func_246 * RelativeStrengthIndexOver30s;
		double func_249 = func_242 + func_248;
		double func_250 = Math.log(Math.abs(func_249));
		double func_251 = func_250 == 0 ? 0 : func_239 / func_250;
		double func_254 = RateOfChangeOver120s == 0 ? 0 : RateOfChangeOver90s / RateOfChangeOver120s;
		double func_255 = Math.log(Math.abs(func_254));
		double func_257 = func_255 * MinValueOver60s;
		double func_260 = MinValueOver120s == 0 ? 0 : MinValueOver30s / MinValueOver120s;
		double func_261 = Math.cos(Math.toRadians(func_260));
		double func_262 = func_257 * func_261;
		double func_264 = VarBwBSandBT240s * -2.6635617398861493;
		double func_267 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_269 = RateOfChangeOver120s == 0 ? 0 : func_267 / RateOfChangeOver120s;
		double func_270 = Math.pow(func_269,2);
		double func_272 = func_270 * RateOfChangeOver120s;
		double func_273 = func_264 + func_272;
		double func_274 = func_262 * func_273;
		double func_276 = Math.pow(RateOfChangeOver120s,2);
		double func_277 = ( func_251>=1 ) ? func_274 : func_276;
		double func_281 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_283 = Math.log(Math.abs(VarBwBSandBF60s));
		double func_284 = func_281 * func_283;
		double func_289 = AverageOver90s + VarBwBSandBF240s;
		double func_290 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : func_289;
		double func_291 = func_284 * func_290;
		double func_293 = func_291 * AverageOver90s;
		double func_294 = Math.cos(Math.toRadians(func_293));
		double func_295 = Math.pow(func_294,2);
		double func_296 = Math.log(Math.abs(func_295));
		double func_297 = func_277 + func_296;
		double func_301 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_303 = Math.pow(RateOfChangeOver120s,2);
		double func_305 = MinValueOver60s == 0 ? 0 : func_303 / MinValueOver60s;
		double func_306 = func_301 * func_305;
		double func_307 = func_306 == 0 ? 0 : func_297 / func_306;
		double func_308 = func_231 - func_307;
		double func_312 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_313 = ( func_222>=1 ) ? func_308 : func_312;
		double func_314 = ( func_207>=1 ) ? func_210 : func_313;
		double func_318 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_321 = RateOfChangeOver120s == 0 ? 0 : RateOfChangeOver90s / RateOfChangeOver120s;
		double func_322 = func_318 - func_321;
		double func_325 = Math.pow(AverageOver60s,2);
		double func_329 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_330 = Math.log(Math.abs(func_329));
		double func_331 = func_325 - func_330;
		double func_332 = ( func_322>=1 ) ? AverageOver90s : func_331;
		double func_334 = Math.log(Math.abs(VarBwBSandBF60s));
		double func_335 = Math.cos(Math.toRadians(func_334));
		double func_341 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_345 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_346 = func_341 * func_345;
		double func_347 = Math.pow(func_346,2);
		double func_349 = func_347 * RateOfChangeOver120s;
		double func_350 = VolatilityOver30s + func_349;
		double func_351 = AverageOver120s + func_350;
		double func_352 = Math.pow(func_351,2);
		double func_355 = RateOfChangeOver120s == 0 ? 0 : VarBwBSandOK60s / RateOfChangeOver120s;
		double func_357 = func_355 - MaxValueOver60s;
		double func_359 = Math.cos(Math.toRadians(AverageOver90s));
		double func_360 = ( func_352>=1 ) ? func_357 : func_359;
		double func_362 = Math.pow(AverageOver90s,2);
		double func_364 = VarBwBSandBT240s * -2.6635617398861493;
		double func_366 = func_364 * AverageOver90s;
		double func_367 = Math.cos(Math.toRadians(func_366));
		double func_368 = Math.pow(func_367,2);
		double func_369 = Math.log(Math.abs(func_368));
		double func_370 = func_369 == 0 ? 0 : func_362 / func_369;
		double func_372 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_376 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_377 = Math.cos(Math.toRadians(func_376));
		double func_378 = func_377 == 0 ? 0 : func_372 / func_377;
		double func_379 = func_370 - func_378;
		double func_381 = Math.cos(Math.toRadians(RateOfChangeOver90s));
		double func_384 = AverageOver90s + VarBwBSandBF240s;
		double func_387 = MaxValueOver90s - MinValueOver90s;
		double func_388 = ( func_381>=1 ) ? func_384 : func_387;
		double func_389 = ( func_360>=1 ) ? func_379 : func_388;
		double func_390 = Math.log(Math.abs(func_389));
		double func_391 = Math.sin(Math.toRadians(func_390));
		double func_392 = func_391 == 0 ? 0 : func_335 / func_391;
		double func_393 = ( func_314>=1 ) ? func_332 : func_392;
		double func_395 = Math.cos(Math.toRadians(VarBwBSandBT120s));
		double func_399 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_403 = Math.cos(Math.toRadians(VarBwBSandBT120s));
		double func_407 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_408 = Math.cos(Math.toRadians(func_407));
		double func_410 = Math.cos(Math.toRadians(RelativeStrengthIndexOver30s));
		double func_414 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_416 = ( func_410>=1 ) ? func_414 : AverageOver30s;
		double func_417 = Math.cos(Math.toRadians(func_416));
		double func_421 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_423 = ( func_417>=1 ) ? func_421 : AverageOver30s;
		double func_424 = Math.cos(Math.toRadians(func_423));
		double func_428 = MaxValueOver90s - MinValueOver90s;
		double func_429 = ( func_424>=1 ) ? RelativeStrengthIndexOver90s : func_428;
		double func_430 = ( func_403>=1 ) ? func_408 : func_429;
		double func_431 = ( RelativeStrengthIndexOver90s>=1 ) ? MaxValueOver60s : func_430;
		double func_432 = ( func_395>=1 ) ? func_399 : func_431;
		double func_434 = func_432 - VarBwBSandBF60s;
		double func_435 = Math.sin(Math.toRadians(func_434));
		double func_441 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_442 = Math.cos(Math.toRadians(func_441));
		double func_443 = func_442 == 0 ? 0 : MinValueOver60s / func_442;
		double func_444 = Math.cos(Math.toRadians(func_443));
		double func_446 = ( RelativeStrengthIndexOver90s>=1 ) ? func_444 : AverageOver30s;
		double func_449 = RateOfChangeOver120s + MaxValueOver120s;
		double func_450 = Math.cos(Math.toRadians(func_449));
		double func_455 = MacdValue + VarBwBSandOK120s;
		double func_456 = ( RelativeStrengthIndexOver90s>=1 ) ? MaxValueOver60s : func_455;
		double func_457 = ( func_446>=1 ) ? func_450 : func_456;
		double func_459 = func_457 - VarBwBSandBF60s;
		double func_461 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_463 = Math.cos(Math.toRadians(VarBwBSandOK60s));
		double func_464 = func_463 == 0 ? 0 : func_461 / func_463;
		double func_468 = ( RelativeStrengthIndexOver90s>=1 ) ? RelativeStrengthIndexOver90s : AverageOver90s;
		double func_469 = Math.pow(func_468,2);
		double func_470 = Math.cos(Math.toRadians(func_469));
		double func_471 = Math.pow(func_470,2);
		double func_472 = Math.cos(Math.toRadians(func_471));
		double func_474 = AverageOver90s == 0 ? 0 : func_472 / AverageOver90s;
		double func_475 = func_464 + func_474;
		double func_476 = func_475 == 0 ? 0 : func_459 / func_475;
		double func_480 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_483 = MinValueOver60s == 0 ? 0 : VarBwBSandBT240s / MinValueOver60s;
		double func_484 = func_480 * func_483;
		double func_488 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_489 = Math.pow(func_488,2);
		double func_490 = func_484 * func_489;
		double func_493 = VarBwBSandOK240s == 0 ? 0 : MinValueOver60s / VarBwBSandOK240s;
		double func_496 = MinValueOver60s * RateOfChangeOver120s;
		double func_497 = func_493 + func_496;
		double func_499 = func_497 * AverageOver90s;
		double func_500 = Math.cos(Math.toRadians(func_499));
		double func_503 = AverageOver90s == 0 ? 0 : MinValueOver90s / AverageOver90s;
		double func_504 = func_500 + func_503;
		double func_505 = ( func_476>=1 ) ? func_490 : func_504;
		double func_507 = func_505 + VarBwBSandOK120s;
		double func_508 = Math.cos(Math.toRadians(func_507));
		double func_509 = Math.cos(Math.toRadians(func_508));
		double func_510 = func_435 * func_509;
		double func_514 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_517 = MinValueOver60s == 0 ? 0 : VarBwBSandBT240s / MinValueOver60s;
		double func_518 = func_514 * func_517;
		double func_520 = Math.pow(AverageOver90s,2);
		double func_523 = VarBwBSandOK240s == 0 ? 0 : MinValueOver60s / VarBwBSandOK240s;
		double func_526 = MinValueOver60s * RateOfChangeOver120s;
		double func_527 = func_523 + func_526;
		double func_529 = func_527 * AverageOver90s;
		double func_530 = Math.cos(Math.toRadians(func_529));
		double func_531 = Math.pow(func_530,2);
		double func_532 = Math.log(Math.abs(func_531));
		double func_533 = func_532 == 0 ? 0 : func_520 / func_532;
		double func_535 = Math.sin(Math.toRadians(VarBwBSandOK60s));
		double func_536 = func_533 - func_535;
		double func_540 = ( RelativeStrengthIndexOver90s>=1 ) ? VolatilityOver30s : AverageOver30s;
		double func_542 = MinValueOver60s == 0 ? 0 : func_540 / MinValueOver60s;
		double func_545 = ( func_542>=1 ) ? VolatilityOver30s : AverageOver90s;
		double func_546 = Math.pow(func_545,2);
		double func_547 = Math.cos(Math.toRadians(func_546));
		double func_548 = ( func_518>=1 ) ? func_536 : func_547;
		double func_550 = func_548 - VarBwBSandBF240s;
		double func_551 = ( func_393>=1 ) ? func_510 : func_550;
		double func_552 = func_113 - func_551;
		return func_552 == 0 ? 0 : func_68 / func_552;
	}

}